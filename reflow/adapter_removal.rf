
// Adapter Removal
// http://adapterremoval.readthedocs.io/en/latest/
val adapterremoval = "quay.io/biocontainers/adapterremoval:2.2.2--h96824bc_3"

val dirs = make("$/dirs")


func AdapterRemoval(read1, read2 file, id, adapter_list file, minlength int) = {

    // First three lines are renaming nonsense because "kat hist" needs
	// the filename to end in fastq.gz to detect the type
    d := dirs.Make([id+"_R1.fastq.gz": read1, id+"_R2.fastq.gz": read2])

    exec(image := adapterremoval, cpu := 32, mem := 16*GiB) (outdir dir) {"
        # Need to rename files to have fastq.gz ending or cutadapt fails
        cd {{outdir}}

        # For some reason the --file{1,2} parameters must come first

        # Identify adapters and save the report
        AdapterRemoval \
            --file1 {{d}}/{{id}}_R1.fastq.gz \
            --file2 {{d}}/{{id}}_R2.fastq.gz \
            --identify-adapters > {{id}}_adapterremoval_identifyadapters.txt 2>&1

        # remove known adapters
        AdapterRemoval \
            --file1 {{d}}/{{id}}_R1.fastq.gz \
            --file2 {{d}}/{{id}}_R2.fastq.gz \
            --gzip \
            --basename {{id}} \
            --output1 {{id}}_R1_adapterremoval_trimmed.fastq.gz \
            --output2 {{id}}_R2_adapterremoval_trimmed.fastq.gz \
            --settings {{id}}_adapterremoval.settings \
            --singleton {{id}}_adapterremoval.singleton.fastq.gz \
            --discarded {{id}}_adapterremoval.discarded.fastq.gz \
            --threads 32 \
            --minlength {{minlength}} \
            --adapter-list {{adapter_list}}
        ls
    "}
}
