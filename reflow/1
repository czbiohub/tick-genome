
|| This is the script normalize-by-median.py in khmer.
|| You are running khmer version 3.0.0a1
|| You are also using screed version 1.0
||
|| If you use this script in a publication, please cite EACH of the following:
||
||   * MR Crusoe et al., 2015. http://dx.doi.org/10.12688/f1000research.6924.1
||   * CT Brown et al., arXiv:1203.4802 [q-bio.GN]
||
|| Please see http://khmer.readthedocs.io/en/latest/citations.html for details.

usage: normalize-by-median.py [--version] [--info] [-h] [-k KSIZE]
                              [-U UNIQUE_KMERS] [--fp-rate FP_RATE]
                              [-M MAX_MEMORY_USAGE] [--small-count] [-q]
                              [-C CUTOFF] [-p] [--force_single]
                              [-u unpaired_reads_filename] [-s filename]
                              [-R report_filename]
                              [--report-frequency report_frequency] [-f]
                              [-o filename] [-l filename] [--gzip | --bzip]
                              input_sequence_filename
                              [input_sequence_filename ...]

Do digital normalization (remove mostly redundant sequences)

positional arguments:
  input_sequence_filename
                        Input FAST[AQ] sequence filename.

optional arguments:
  --version             show program's version number and exit
  --info                print citation information
  -h, --help            show this help message and exit
  -k KSIZE, --ksize KSIZE
                        k-mer size to use (default: 32)
  -U UNIQUE_KMERS, --unique-kmers UNIQUE_KMERS
                        approximate number of unique kmers in the input set
                        (default: 0)
  --fp-rate FP_RATE     Override the automatic FP rate setting for the current
                        script (default: None)
  -M MAX_MEMORY_USAGE, --max-memory-usage MAX_MEMORY_USAGE
                        maximum amount of memory to use for data structure
                        (default: None)
  --small-count         Reduce memory usage by using a smaller counter for
                        individual kmers. (default: False)
  -q, --quiet
  -C CUTOFF, --cutoff CUTOFF
                        when the median k-mer coverage level is above this
                        number the read is not kept. (default: 20)
  -p, --paired          require that all sequences be properly paired
                        (default: False)
  --force_single        treat all sequences as single-ended/unpaired (default:
                        False)
  -u unpaired_reads_filename, --unpaired-reads unpaired_reads_filename
                        include a file of unpaired reads to which -p/--paired
                        does not apply. (default: None)
  -s filename, --savegraph filename
                        save the k-mer countgraph to disk after all reads are
                        loaded. (default: None)
  -R report_filename, --report report_filename
                        write progress report to report_filename (default:
                        None)
  --report-frequency report_frequency
                        report progress every report_frequency reads (default:
                        100000)
  -f, --force           continue past file reading errors (default: False)
  -o filename, --output filename
                        only output a single file with the specified filename;
                        use a single dash "-" to specify that output should go
                        to STDOUT (the terminal) (default: None)
  -l filename, --loadgraph filename
                        load a precomputed k-mer graph from disk (default:
                        None)
  --gzip                Compress output using gzip (default: False)
  --bzip                Compress output using bzip2 (default: False)

Discard sequences based on whether or not their median k-mer abundance lies
above a specified cutoff. Kept sequences will be placed in <fileN>.keep.

By default, paired end reads will be considered together; if either read should
be kept, both will be kept. (This keeps both reads from a fragment, and helps
with retention of repeats.) Unpaired reads are treated individually.

If `-p`/`--paired` is set, then proper pairing is required and the script will
exit on unpaired reads, although `--unpaired-reads` can be used to supply a
file of orphan reads to be read after the paired reads.

`--force_single` will ignore all pairing information and treat reads
individually.

With `-s`/`--savegraph`, the k-mer countgraph will be saved to the specified
file after all sequences have been processed. `-l`/`--loadgraph` will load the
specified k-mer countgraph before processing the specified files.  Note that
these graphs are are in the same format as those produced by `load-into-
counting.py` and consumed by `abundance-dist.py`.

To append reads to an output file (rather than overwriting it), send output to
STDOUT with `--output -` and use UNIX file redirection syntax (`>>`) to append
to the file.

Example:

    normalize-by-median.py -k 17 tests/test-data/test-abund-read-2.fa

Example:

    normalize-by-median.py -p -k 17 \
    tests/test-data/test-abund-read-paired.fa

Example:

    normalize-by-median.py -p -k 17 -o - tests/test-data/paired.fq \
    >> appended-output.fq

Example:

    normalize-by-median.py -k 17 -f tests/test-data/test-error-reads.fq \
    tests/test-data/test-fastq-reads.fq

Example:

    normalize-by-median.py -k 17 -s test.ct \
    tests/test-data/test-abund-read-2.fa \
    tests/test-data/test-fastq-reads.fq
